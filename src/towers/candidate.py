import tensorflow as tf

# Third-party
from src.models.movie import MovieEmbeddingModel


class CandidateTower(tf.keras.Model):

    def __init__(
        self,
        dataset,
        embedding_dim,
    ) -> 'CandidateTower':
        """
            Candidate Tower
        """
        super().__init__()

        self.embedding_model = MovieEmbeddingModel(
            dataset = dataset,
            embedding_dim = embedding_dim
        )

        self.dense = tf.keras.Sequential([
            tf.keras.layers.Dense(embedding_dim),
        ])


    def call(
        self,
        inputs: tf.Tensor,
    ) -> tf.Tensor:
        """
            Calls the model on the input tensor.

            Parameters:
                - inputs (tf.Tensor): A tensor containing input data to be processed by the embedding model. 

            Returns:
                - (tf.Tensor): The output tensor generated by the model. 
        """
        x = self.embedding_model(inputs)
        x = self.dense(x)
        return x
